{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","_posts","action","console","log","index","type","slice","post","comments","postId","comment","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","class","length","PhotoWall","sort","x","y","map","key","AddPhoto","handleSubmit","bind","event","preventDefault","target","elements","link","value","Number","Date","this","startAddingPost","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","match","params","find","findIndex","loading","Main","startLoadingPosts","then","setState","startLoadingComments","exact","path","render","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","addPost","catch","error","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","addComment","chileSnapshot","Object","values","loadComments","App","withRouter","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7144f6f2.chunk.js","sourcesContent":["const posts = []\r\n\r\n    export default posts;","import _posts from '../data/posts'\r\nimport {combineReducers, bindActionCreators} from 'redux'\r\n\r\nfunction comments(state = {}, action){\r\n    switch (action.type){\r\n        case 'ADD_COMMENT':\r\n        if (!state[action.postId]){\r\n            return {...state, [action.postId]: [action.comment]}\r\n        } else {\r\n            return {...state, [action.postId]: [...state[action.postId], action.comment]}\r\n        }\r\n        \r\n        case 'LOAD_COMMENTS': return action.comments\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction posts(state = _posts, action){\r\n    console.log(action.index)\r\n    switch (action.type){\r\n        case \"REMOVE_POST\": return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case \"ADD_POST\": return [...state, action.post]\r\n        case \"LOAD_POSTS\": return action.posts\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({posts, comments})\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Photo(props){\r\n    const post = props.post;\r\n    return <figure className=\"figure\">\r\n                <Link to={`/single/${post.id}`}><img className=\"photo\" src={post.imageLink} alt={post.description}/></Link>\r\n                <figcaption><p>{post.description}</p></figcaption>\r\n                <div className=\"button-container\">\r\n                    <button onClick={() => {\r\n                        props.startRemovingPost(props.index, post.id)\r\n                        props.history.push('/')\r\n                    }}>Remove</button>\r\n                    <Link class=\"button\" to={`/single/${post.id}`}>\r\n                        <div className=\"comment-count\">\r\n                            <div className=\"speech-bubble\"></div>\r\n                            {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </figure>\r\n}\r\n\r\nPhoto.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Photo","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction PhotoWall(props){\r\n    return <div>\r\n                <Link className=\"addIcon\" to=\"/AddPhoto\"></Link>\r\n                <div className=\"photoGrid\">\r\n                    {props.posts\r\n                    .sort(function(x,y) {\r\n                        return y.id - x.id\r\n                    })\r\n                    .map((post, index) => <Photo key={index} post={post} {...props} index={index}/>)}\r\n                </div>\r\n            </div> \r\n}\r\n\r\nPhotoWall.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n}\r\nexport default PhotoWall;","import React, { Component } from 'react'\r\n\r\nclass AddPhoto extends Component{\r\n    constructor() {\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const imageLink = event.target.elements.link.value\r\n        const description = event.target.elements.description.value\r\n        const post= {\r\n            id: Number(new Date()),\r\n            description: description,\r\n            imageLink: imageLink\r\n        }\r\n        if(description && imageLink){\r\n            this.props.startAddingPost(post)\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        return <div>\r\n                    <div className=\"form\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input type=\"text\" placeholder=\"Link\" name=\"link\"/>\r\n                            <input type=\"text\" placeholder=\"Description\" name=\"description\"/>\r\n                            <button>Post</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default AddPhoto","import React, { Component } from 'react'\r\n\r\nclass Comments extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const comment = event.target.elements.comment.value;\r\n        this.props.startAddingComment(comment, this.props.id)\r\n        event.target.elements.comment.value = \"\";\r\n    }\r\n    render() {\r\n        return <div className=\"comment\">\r\n            {\r\n                this.props.comments.map((comment, index) => {\r\n                    return (\r\n                        <p key={index}>{comment}</p>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"comment\" name=\"comment\" />\r\n                <input type=\"submit\" hidden />\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Comments","import React, { Component } from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\n\r\nclass Single extends Component {\r\n    render() {\r\n        const {match, posts} = this.props\r\n        const id = Number(match.params.id);\r\n        const post = posts.find((post) => post.id === id)\r\n        const comments = this.props.comments[id] || []\r\n        const index = this.props.posts.findIndex((post) => post.id === id)\r\n\r\n        if(this.props.loading === true){\r\n               return <div className=\"loader\">...loading</div>\r\n        }else if (post){\r\n        return (\r\n            <div className=\"single-photo\">\r\n                <Photo post={post} {...this.props} index={index}/>\r\n                <Comments startAddingComment={this.props.startAddingComment} comments={comments} id={id}/>\r\n            </div>\r\n        )} else{\r\n            return <h1>...no post found</h1>\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Single","import React, { Component } from 'react'\r\nimport PhotoWall from './PhotoWall'\r\nimport AddPhoto from './AddPhoto'\r\nimport {Route, Link} from 'react-router-dom'\r\nimport Single from './Single'\r\n\r\nclass Main extends Component{\r\n\r\n    state = { loading: true}\r\n\r\n    componentDidMount(){\r\n        this.props.startLoadingPosts().then(() => {\r\n            this.setState({loading: false})\r\n        })\r\n        this.props.startLoadingComments()\r\n    }\r\n    render(){\r\n       return  (\r\n           <div> \r\n               <h1> \r\n                   <Link to=\"/\"> PhotoWall </Link> \r\n               </h1>\r\n                    <Route exact path = \"/\" render={() => (\r\n                        <div>\r\n                            <PhotoWall {...this.props}/>\r\n                        </div>\r\n                    )}/>\r\n                    <Route path=\"/AddPhoto\" render={({history}) => (\r\n                        <AddPhoto {...this.props}/>\r\n                    )}/>\r\n                    <Route path=\"/single/:id\" render= {(params) => (\r\n                        <Single loading= {this.state.loading} {...this.props} {...params}/>\r\n                    )}/>\r\n                </div>\r\n                )\r\n    }\r\n}\r\n\r\nexport default Main","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCN3eOtrhSYGZWS0wuK7DdAhGM-m7ThP_8\",\r\n  authDomain: \"photowall-13f0b.firebaseapp.com\",\r\n  databaseURL: \"https://photowall-13f0b.firebaseio.com\",\r\n  projectId: \"photowall-13f0b\",\r\n  storageBucket: \"photowall-13f0b.appspot.com\",\r\n  messagingSenderId: \"483279932786\",\r\n  appId: \"1:483279932786:web:0e85a40c99d19eb90da1eb\",\r\n  measurementId: \"G-ME6SV0CCXD\"\r\n};\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n  const database = firebase.database();\r\n  \r\n  export {database};","import {database} from '../database/config'\r\n\r\nexport function startAddingPost(post){\r\n    return (dispatch) => {\r\n        return database.ref('posts').update({[post.id]: post}).then(() =>{\r\n            dispatch(addPost(post))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingPosts(){\r\n    return (dispatch) => {\r\n        return database.ref('posts').once('value').then((snapshot) => {\r\n            let posts = []\r\n            snapshot.forEach((childSnapshot) => {\r\n                posts.push(childSnapshot.val())\r\n            })\r\n            dispatch(loadPosts(posts))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startRemovingPost(index, id){\r\n    return (dispatch) => {\r\n        return database.ref(`posts/${id}`).remove().then(() =>{\r\n            dispatch(removePost(index))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startAddingComment(comment, postId){\r\n    return (dispatch) => {\r\n        return database.ref('comments/'+postId).push(comment).then(() => {\r\n            dispatch(addComment(comment, postId))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingComments(id){\r\n    return (dispatch) => {\r\n        return database.ref('comments').once('value').then((snapshot) => {\r\n            let comments = {}\r\n            snapshot.forEach((chileSnapshot) => {\r\n                comments[chileSnapshot.key] = Object.values(chileSnapshot.val())\r\n            })\r\n            dispatch(loadComments(comments))\r\n        } )\r\n    }\r\n}\r\n\r\nexport function loadComments(comments){\r\n    return {\r\n        type: 'LOAD_COMMENTS',\r\n        comments\r\n    }\r\n}\r\n\r\n\r\n\r\n//remove\r\n\r\nexport function removePost(index) {\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        index: index\r\n    }\r\n}\r\n\r\nexport function addPost(post) {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post: post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId){\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts){\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n}","import Main from './Main'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as actions from '../redux/actions'\r\nimport {withRouter} from 'react-router'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators(actions, dispatch)\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/stylesheet.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './redux/reducer'\nimport {Provider} from 'react-redux'\nimport App from './Components/App'\nimport thunk from 'redux-thunk'\nimport {database} from './database/config'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'))"],"sourceRoot":""}